{"version":3,"sources":["MealService.js"],"names":["MealService","fetchAllMeals","validMeals","dummyData","meals","map","meal","newMeal","Meal","id","name","size","price","addMeal","mealLength","length","lastId","newId","push","getAMeal","find","delAMeal","pop","updateMeal","mealId","dummy","Ameal","getMealIndex","indexOf","updateAMeal","splice"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,WAAW,GAAG;AAEhBC,EAAAA,aAFgB,2BAEA;AACZ,QAAMC,UAAU,GAAGC,mBAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAU;AAC7C,UAAMC,OAAO,GAAG,IAAIC,aAAJ,EAAhB;AACAD,MAAAA,OAAO,CAACE,EAAR,GAAaH,IAAI,CAACG,EAAlB;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAeJ,IAAI,CAACI,IAApB;AACAH,MAAAA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAApB;AACAJ,MAAAA,OAAO,CAACK,KAAR,GAAgBN,IAAI,CAACM,KAArB;AACA,aAAOL,OAAP;AACH,KAPkB,CAAnB;;AAQA,WAAOL,UAAP;AACH,GAZe;AAchBW,EAAAA,OAdgB,mBAcRP,IAdQ,EAcF;AACV,QAAMQ,UAAU,GAAGX,mBAAUC,KAAV,CAAgBW,MAAnC;AACA,QAAMC,MAAM,GAAGb,mBAAUC,KAAV,CAAgBU,UAAU,GAAG,CAA7B,EAAgCL,EAA/C;AACA,QAAMQ,KAAK,GAAGD,MAAM,GAAG,CAAvB;AACAV,IAAAA,IAAI,CAACG,EAAL,GAAUQ,KAAV;;AACAd,uBAAUC,KAAV,CAAgBc,IAAhB,CAAqBZ,IAArB;;AACA,WAAOA,IAAP;AACH,GArBe;AAuBhBa,EAAAA,QAvBgB,oBAuBPV,EAvBO,EAuBH;AACT,QAAMH,IAAI,GAAGH,mBAAUC,KAAV,CAAgBgB,IAAhB,CAAqB,UAAAd,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,IAAWA,EAAf;AAAA,KAAzB,CAAb;;AACA,WAAOH,IAAI,IAAI,EAAf;AACH,GA1Be;AA4BhBe,EAAAA,QA5BgB,oBA4BPZ,EA5BO,EA4BJ;AACV,QAAMH,IAAI,GAAGH,mBAAUC,KAAV,CAAgBgB,IAAhB,CAAqB,UAAAd,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,IAAWA,EAAf;AAAA,KAAzB,CAAb;;AACAN,uBAAUC,KAAV,CAAgBkB,GAAhB,CAAoBhB,IAApB;;AACA,WAAOA,IAAP;AACD,GAhCe;AAkChBiB,EAAAA,UAlCgB,sBAkCLjB,IAlCK,EAkCCG,EAlCD,EAkCI;AAEhB;AACA,QAAMe,MAAM,GAAGC,KAAK,CAACrB,KAAN,CAAYgB,IAAZ,CAAiB,UAACM,KAAD;AAAA,aAAWA,KAAK,CAACjB,EAAN,IAAYA,EAAvB;AAAA,KAAjB,CAAf;AACA,QAAMkB,YAAY,GAAGF,KAAK,CAACrB,KAAN,CAAYwB,OAAZ,CAAoBJ,MAApB,CAArB;AAEA,QAAMK,WAAW,GAAG,IAAIrB,aAAJ,EAApB;AAEAqB,IAAAA,WAAW,CAACpB,EAAZ,GAAiBA,EAAjB;AACAoB,IAAAA,WAAW,CAACnB,IAAZ,GAAmBJ,IAAI,CAACI,IAAxB;AACAmB,IAAAA,WAAW,CAAClB,IAAZ,GAAmBL,IAAI,CAACK,IAAxB;AACAkB,IAAAA,WAAW,CAACjB,KAAZ,GAAoBN,IAAI,CAACM,KAAzB;AAEAa,IAAAA,KAAK,CAACrB,KAAN,CAAY0B,MAAZ,CAAmBH,YAAnB,EAAiC,CAAjC,EAAoCE,WAApC;AAEA,WAAOA,WAAP;AACH;AAlDe,CAApB;eAqDe7B,W","sourceRoot":"C:\\Users\\USER\\Desktop\\Meal App\\api\\services","sourcesContent":["import dummyData from '../utils/dummydata';\r\nimport Meal from '../models/meal.model';\r\n\r\nconst MealService = {\r\n\r\n    fetchAllMeals() {\r\n        const validMeals = dummyData.meals.map((meal) => {\r\n            const newMeal = new Meal();\r\n            newMeal.id = meal.id;\r\n            newMeal.name = meal.name;\r\n            newMeal.size = meal.size;\r\n            newMeal.price = meal.price;\r\n            return newMeal;\r\n        });\r\n        return validMeals;\r\n    },\r\n\r\n    addMeal(meal) {\r\n        const mealLength = dummyData.meals.length;\r\n        const lastId = dummyData.meals[mealLength - 1].id;\r\n        const newId = lastId + 1;\r\n        meal.id = newId;\r\n        dummyData.meals.push(meal);\r\n        return meal;\r\n    },\r\n\r\n    getAMeal(id) {\r\n        const meal = dummyData.meals.find(meal => meal.id == id);\r\n        return meal || {};\r\n    },\r\n\r\n    delAMeal(id){\r\n      const meal = dummyData.meals.find(meal => meal.id == id);\r\n      dummyData.meals.pop(meal);\r\n      return meal;\r\n    },\r\n\r\n    updateMeal(meal, id){\r\n\r\n        // get the meal id and index\r\n        const mealId = dummy.meals.find((Ameal) => Ameal.id == id);\r\n        const getMealIndex = dummy.meals.indexOf(mealId);\r\n\r\n        const updateAMeal = new Meal();\r\n        \r\n        updateAMeal.id = id;\r\n        updateAMeal.name = meal.name;\r\n        updateAMeal.size = meal.size;\r\n        updateAMeal.price = meal.price;\r\n\r\n        dummy.meals.splice(getMealIndex, 1, updateAMeal);\r\n\r\n        return updateAMeal;\r\n    }\r\n};\r\n\r\nexport default MealService;"]}