{"version":3,"sources":["order.service.js"],"names":["OrderService","postAnOrder","order","orderLength","dummyData","Orders","length","lastOrder","id","push","modifyOrder","orderId","find","anOrder","getOrderIndex","indexOf","userName","username","address","items","splice","getAllOrders","allOrders","map","orders","newOrder"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,WADiB,uBACLC,KADK,EACC;AACd,QAAMC,WAAW,GAAGC,wBAAUC,MAAV,CAAiBC,MAArC;AACA,QAAMC,SAAS,GAAGH,wBAAUC,MAAV,CAAiBF,WAAW,GAAG,CAA/B,EAAkCK,EAApD;AAEAN,IAAAA,KAAK,CAACM,EAAN,GAAWD,SAAS,GAAG,CAAvB;;AAEAH,4BAAUC,MAAV,CAAiBI,IAAjB,CAAsBP,KAAtB;;AACA,WAAOA,KAAP;AACH,GATgB;AAWjBQ,EAAAA,WAXiB,uBAWLR,KAXK,EAWEM,EAXF,EAWK;AAClB;AACA,QAAMG,OAAO,GAAGP,wBAAUC,MAAV,CAAiBO,IAAjB,CAAsB,UAACC,OAAD;AAAA,aAAaA,OAAO,CAACL,EAAR,IAAcA,EAA3B;AAAA,KAAtB,CAAhB;;AACA,QAAMM,aAAa,GAAGV,wBAAUC,MAAV,CAAiBU,OAAjB,CAAyBJ,OAAzB,CAAtB;;AAEAA,IAAAA,OAAO,CAACH,EAAR,GAAaA,EAAb;;AAEI,QAAGN,KAAK,CAACc,QAAN,IAAkB,IAArB,EAA0B;AACtBL,MAAAA,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACM,QAA3B;AACH,KAFD,MAEO;AACHN,MAAAA,OAAO,CAACM,QAAR,GAAmBf,KAAK,CAACc,QAAzB;AACH;;AAED,QAAGd,KAAK,CAACgB,OAAN,IAAiB,IAApB,EAAyB;AACrBP,MAAAA,OAAO,CAACO,OAAR,GAAkBP,OAAO,CAACO,OAA1B;AACH,KAFD,MAEO;AACHP,MAAAA,OAAO,CAACO,OAAR,GAAkBhB,KAAK,CAACgB,OAAxB;AACH;;AAED,QAAGhB,KAAK,CAACiB,KAAN,IAAe,IAAlB,EAAuB;AACnBR,MAAAA,OAAO,CAACQ,KAAR,GAAgBR,OAAO,CAACQ,KAAxB;AACH,KAFD,MAEO;AACHR,MAAAA,OAAO,CAACQ,KAAR,GAAgBjB,KAAK,CAACiB,KAAtB;AACH;;AAEDf,4BAAUC,MAAV,CAAiBe,MAAjB,CAAwBN,aAAxB,EAAuC,CAAvC,EAA0CH,OAA1C;;AAEJ,WAAOA,OAAP;AACH,GAvCgB;AAyCjBU,EAAAA,YAzCiB,0BAyCH;AACV,QAAMC,SAAS,GAAGlB,wBAAUC,MAAV,CAAiBkB,GAAjB,CAAqB,UAACC,MAAD,EAAY;AAC/C,UAAMC,QAAQ,GAAG,IAAIpB,cAAJ,EAAjB;AAEAoB,MAAAA,QAAQ,CAACjB,EAAT,GAAcgB,MAAM,CAAChB,EAArB;AACAiB,MAAAA,QAAQ,CAACT,QAAT,GAAoBQ,MAAM,CAACP,QAA3B;AACAQ,MAAAA,QAAQ,CAACP,OAAT,GAAmBM,MAAM,CAACN,OAA1B;AACAO,MAAAA,QAAQ,CAACN,KAAT,GAAiBK,MAAM,CAACL,KAAxB;AAEA,aAAOM,QAAP;AACH,KATiB,CAAlB;;AAUA,WAAOH,SAAS,IAAI,EAApB;AACH;AArDgB,CAArB;eAwDetB,Y","sourceRoot":"C:\\Users\\USER\\Desktop\\Meal App\\api\\services","sourcesContent":["import dummyData from '../utils/orderDummyData';\r\nimport Orders from './../models/order.model';\r\n\r\nconst OrderService = {\r\n    postAnOrder(order){\r\n        const orderLength = dummyData.Orders.length;\r\n        const lastOrder = dummyData.Orders[orderLength - 1].id;\r\n\r\n        order.id = lastOrder + 1;\r\n\r\n        dummyData.Orders.push(order);\r\n        return order;\r\n    },\r\n\r\n    modifyOrder(order, id){\r\n        // get the order id and index\r\n        const orderId = dummyData.Orders.find((anOrder) => anOrder.id == id);\r\n        const getOrderIndex = dummyData.Orders.indexOf(orderId);\r\n\r\n        orderId.id = id;\r\n\r\n            if(order.userName == null){\r\n                orderId.username = orderId.username;\r\n            } else {\r\n                orderId.username = order.userName;\r\n            }\r\n\r\n            if(order.address == null){\r\n                orderId.address = orderId.address;\r\n            } else {\r\n                orderId.address = order.address;\r\n            }\r\n\r\n            if(order.items == null){\r\n                orderId.items = orderId.items;\r\n            } else {\r\n                orderId.items = order.items;\r\n            }\r\n\r\n            dummyData.Orders.splice(getOrderIndex, 1, orderId);\r\n\r\n        return orderId;\r\n    },\r\n\r\n    getAllOrders(){\r\n        const allOrders = dummyData.Orders.map((orders) => {\r\n            const newOrder = new Orders();\r\n\r\n            newOrder.id = orders.id;\r\n            newOrder.userName = orders.username;\r\n            newOrder.address = orders.address;\r\n            newOrder.items = orders.items;\r\n\r\n            return newOrder;\r\n        })\r\n        return allOrders || {};\r\n    }\r\n}\r\n\r\nexport default OrderService;"]}